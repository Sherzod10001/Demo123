<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="6" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-06-18T03:23:24 EDT" name="Command line suite" finished-at="2020-06-18T03:23:51 EDT" duration-ms="26891">
    <groups>
    </groups>
    <test started-at="2020-06-18T03:23:24 EDT" name="Command line test" finished-at="2020-06-18T03:23:51 EDT" duration-ms="26891">
      <class name="class24.AssertionTest">
        <test-method signature="testSoftAssert()[pri:0, instance:class24.AssertionTest@289d1c02]" started-at="2020-06-18T03:23:24 EDT" name="testSoftAssert" finished-at="2020-06-18T03:23:24 EDT" duration-ms="9" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Message for indication method = testSoftAssert() expected [Hello] but found [hell],
5>3 example expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Message for indication method = testSoftAssert() expected [Hello] but found [hell],
5>3 example expected [false] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at class24.AssertionTest.testSoftAssert(AssertionTest.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSoftAssert -->
      </class> <!-- class24.AssertionTest -->
      <class name="test2.TestB">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test2.TestB@3891771e]" started-at="2020-06-18T03:23:46 EDT" name="beforeClass" finished-at="2020-06-18T03:23:49 EDT" duration-ms="3055" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="testB1()[pri:0, instance:test2.TestB@3891771e]" started-at="2020-06-18T03:23:49 EDT" name="testB1" finished-at="2020-06-18T03:23:51 EDT" duration-ms="2235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testB1 -->
        <test-method is-config="true" signature="aftherClass()[pri:0, instance:test2.TestB@3891771e]" started-at="2020-06-18T03:23:51 EDT" name="aftherClass" finished-at="2020-06-18T03:23:51 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftherClass -->
      </class> <!-- test2.TestB -->
      <class name="test2.TestC">
        <test-method signature="testC()[pri:0, instance:test2.TestC@78ac1102]" started-at="2020-06-18T03:23:51 EDT" name="testC" finished-at="2020-06-18T03:23:51 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC -->
        <test-method signature="testC2()[pri:0, instance:test2.TestC@78ac1102]" started-at="2020-06-18T03:23:51 EDT" name="testC2" finished-at="2020-06-18T03:23:51 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC2 -->
        <test-method signature="testC3()[pri:0, instance:test2.TestC@78ac1102]" started-at="2020-06-18T03:23:51 EDT" name="testC3" finished-at="2020-06-18T03:23:51 EDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testC3 -->
      </class> <!-- test2.TestC -->
      <class name="test.WikipediaTest">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.WikipediaTest@22eeefeb]" started-at="2020-06-18T03:23:24 EDT" name="beforeClass" finished-at="2020-06-18T03:23:28 EDT" duration-ms="3827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="selectTest()[pri:0, instance:test.WikipediaTest@22eeefeb]" started-at="2020-06-18T03:23:28 EDT" name="selectTest" finished-at="2020-06-18T03:23:34 EDT" duration-ms="5938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectTest -->
        <test-method is-config="true" signature="aftherClass()[pri:0, instance:test.WikipediaTest@22eeefeb]" started-at="2020-06-18T03:23:34 EDT" name="aftherClass" finished-at="2020-06-18T03:23:34 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftherClass -->
      </class> <!-- test.WikipediaTest -->
      <class name="test2.TestA">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test2.TestA@17d0685f]" started-at="2020-06-18T03:23:34 EDT" name="beforeClass" finished-at="2020-06-18T03:23:37 EDT" duration-ms="3110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="selectGoods()[pri:0, instance:test2.TestA@17d0685f]" started-at="2020-06-18T03:23:37 EDT" name="selectGoods" finished-at="2020-06-18T03:23:46 EDT" duration-ms="8652" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectGoods -->
        <test-method is-config="true" signature="aftherClass()[pri:0, instance:test2.TestA@17d0685f]" started-at="2020-06-18T03:23:46 EDT" name="aftherClass" finished-at="2020-06-18T03:23:46 EDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftherClass -->
      </class> <!-- test2.TestA -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
